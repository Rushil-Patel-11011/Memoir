spring:
  data:
    mongodb:
      uri: mongodb+srv://${MONGODB_UNAME}:${MONGODB_PWRD}@cluster0.kappm.mongodb.net/?retryWrites=true&w=majority&appName=Cluster0
      database: journaldb
      auto-index-creation: true
  redis:
    host: ${REDIS_HOST}
    port: ${REDIS_PORT}
    password: ${REDIS_PWRD}
  main:
    allow-circular-references: true
  mail:
    host: smtp.gmail.com
    port: 587
    username: rushilpatel11011@gmail.com
    password: ${MAIL_APP_PWRD}
    properties:
      mail:
        smtp:
          auth: true
          starttls:
            enable: true
  server:
    port: 8080
  kafka:
    bootstrap-servers: ${KAFKA_BOOTSTRAP_SERVER}
    producer:
      key-serializer: org.apache.kafka.common.serialization.StringSerializer
      value-serializer: org.springframework.kafka.support.serializer.JsonSerializer
    consumer:
      group-id: weekly-sentiment-group
      key-deserializer: org.apache.kafka.common.serialization.StringDeserializer
      value-deserializer: org.springframework.kafka.support.serializer.JsonDeserializer
      properties:
        spring:
          json:
            trusted:
              packages: com.rushil.Memoir.model
    properties:
      security:
        protocol: SASL_SSL
      sasl:
        mechanism: PLAIN
        jaas:
          config: org.apache.kafka.common.security.plain.PlainLoginModule required username=${KAFKA_UNAME} password=${KAFKA_PWRD};
      session:
        timeout:
          ms: 45000
client:
  id: ${KAFKA_CLIENT_ID}
weather_api_key : ${WEATHER_API_KEY}